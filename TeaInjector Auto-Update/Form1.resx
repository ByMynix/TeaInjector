<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ibtk6Gtg/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>